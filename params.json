{"name":"Four","tagline":"Four","body":"# <img src=\"https://github.com/allotrop3/four/blob/master/public/images/four-icon.png\" alt=\"Four\" height=\"30px\">  Four\r\n\r\nFour is a WebGL framework that abstracts the low-level API to a quickly usable interface.\r\n\r\nIt uses the gl-matrix library, which is also included in the framework. The documentation for the gl-matrix librabry can be found [here](http://glmatrix.net/docs/2.2.0/).\r\n\r\n## Getting started\r\n\r\nSimply download [Four](https://github.com/allotrop3/four/tree/master/public/scripts/four.min.js) and include the script in your project.\r\n\r\n```javascript\r\n<script type=\"text/javascript\" src=\"path/to/four.min.js\"></script>\r\n```\r\n\r\nAlso be sure to include an HTML `canavs` element in your project. If no default `width` or `height` attributes are set, the framework assumes their respective window dimension.\r\n\r\n```html\r\n<canvas width=\"500\" height=\"500\"></canvas>\r\n```\r\n\r\n### Example\r\n\r\nThe following example assumes an OBJ mesh file loader to import a mesh into the scene. It further constructs a point light source and a three dimensional perspective projection to illuminate and visualise the scene, respectively. The scenes pre-render execution routine simply rotates the scene around the mesh.\r\n\r\n```javascript\r\n<script>\r\n   var meshLoader = new Four.OBJMeshLoader({ path: '../path/to/mesh.obj' });\r\n\r\n   function main()\r\n   {\r\n      var program = new Four.Program({ selector: '.class-to-shaders' });\r\n   \r\n      var pointLight = new Four.PointLight({ program: program, attenuation: [0.025, 0.01, 0.00025], location: [10, 15, 10] });\r\n   \r\n      var view = new Four.Framebuffer();\r\n   \r\n      var camera = new Four.PerspectiveCamera({ program: program, location: [40, 30, 40] });\r\n      \r\n      var mesh = new Four.Mesh({\r\n         buffers: new Four.VertexArrayObject({ program: program, attributes: ['vec3 position', 'vec3 normal'] }),\r\n         vertices: meshLoader.vertices,\r\n         normals: meshLoader.normals,\r\n         material: new Four.Material({ program: program, diffuse: 0x9F8A60 })\r\n      });\r\n   \r\n      scene = new Four.Scene();\r\n   \r\n      scene.put(mesh);\r\n   \r\n      scene.render(view, camera, function()\r\n      {\r\n         scene.rotation += 0.25;\r\n      });\r\n   }\r\n   \r\n   setTimeout(main, 3000);\r\n</script>\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}